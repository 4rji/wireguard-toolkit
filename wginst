#!/usr/bin/env bash


# Lista de paquetes a instalar
paquetes=("wireguard" "resolvconf" )

# Función para verificar si un paquete está instalado (Debian/Ubuntu/Kali)
paquete_instalado_apt() {
    dpkg -l "$1" | grep -q '^ii'  
}

# Función para verificar si un paquete está instalado (CentOS/RHEL)
paquete_instalado_yum() {
    yum list installed "$1" &> /dev/null
}

# Función para verificar si un paquete está instalado (Fedora)
paquete_instalado_dnf() {
    dnf list installed "$1" &> /dev/null
}

# Función para verificar si un paquete está instalado (Arch Linux)
paquete_instalado_pacman() {
    pacman -Qi "$1" &> /dev/null
}

# Detectar el sistema operativo
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
fi

# Instalar paquetes basados en el sistema operativo
for paquete in "${paquetes[@]}"; do
    case $OS in
        "debian"|"ubuntu"|"kali")
            if ! paquete_instalado_apt "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo apt-get install -y "$paquete"
            fi
            ;;
        "centos"|"rhel")
            if ! paquete_instalado_yum "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo yum install -y "$paquete"
            fi
            ;;
        "fedora")
            if ! paquete_instalado_dnf "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo dnf install -y "$paquete"
            fi
            ;;
        "arch")
            if ! paquete_instalado_pacman "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo pacman -S --noconfirm "$paquete"
            fi
            ;;
        *)
            ;;
    esac
done





# Function to handle the setup of the WireGuard connection
setup_wireguard() {
    echo -e "\033[0;34mCopying the configuration file to /etc/wireguard/\033[0m"
    sudo cp "$config_file" "/etc/wireguard/$file_name"
    sudo chmod 600 "/etc/wireguard/$file_name"
    echo -e "\033[0;35mBringing up the WireGuard connection...\033[0m"
    sudo wg-quick up "$interface_name"
    echo -e "\033[0;36mCurrent status of WireGuard:\033[0m"
    sudo wg
    echo "Connecting."
    sleep .5
    echo "Connecting.."
    sleep 1
    echo -e "\033[0;31mYour public IP address is:\033[0m"
    curl ifconfig.me
    echo ""
}

if [ "$1" == "-c" ]; then
    crontab_mode=true
elif [ -z "$1" ]; then
    echo -e "\033[0;31mError: No configuration file provided or -c flag not used."
    echo -e "Usage: $0 [-c | path/to/file.conf]\033[0m"
    exit 1
else
    config_file=$1
    file_name=$(basename "$config_file")
    interface_name="${file_name%.*}"
    setup_wireguard
fi

echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"
echo "Do you wish to schedule the WireGuard connection to restart every minute? [Y/n] "
read -r response
response=${response:-Y}

if [[ "$response" == "Y" || "$response" == "y" ]]; then
    echo -e "\033[0;32mCreating /usr/local/bin/check_wg.sh...\033[0m"
    echo "#!/bin/bash" | sudo tee /usr/local/bin/check_wg.sh > /dev/null
    echo "INTERFACE=\"$interface_name\"" | sudo tee -a /usr/local/bin/check_wg.sh > /dev/null
    echo "if ! wg show \"\$INTERFACE\" > /dev/null 2>&1; then" | sudo tee -a /usr/local/bin/check_wg.sh > /dev/null
    echo "    sudo wg-quick up \"\$INTERFACE\"" | sudo tee -a /usr/local/bin/check_wg.sh > /dev/null
    echo "fi" | sudo tee -a /usr/local/bin/check_wg.sh > /dev/null
    sudo chmod +x /usr/local/bin/check_wg.sh
    echo -e "\033[0;32mAdding the script to crontab to run every minute...\033[0m"
    (sudo crontab -l 2>/dev/null; echo "* * * * * /usr/local/bin/check_wg.sh") | sudo crontab -
    echo -e "\033[0;32mThe WireGuard connection will now be checked and restarted every minute if necessary.\033[0m"
fi






echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"

echo -e "\033[1;37mADVISORY: This script should be used for authorized penetration testing and/or educational purposes only. Any misuse of this software will not be the responsibility of the author or of any other collaborator. Use it at your own computers and/or with the computer owner's permission.\033[0m"

echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"

echo ""
sudo crontab -l
echo ""